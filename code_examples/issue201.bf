wagRatesMatrix = {{*       , 0.551571, 0.509848, 0.738998, 1.027040, 0.908598, 1.582850, 1.416720, 0.316954, 0.193335, 0.397915, 0.906265, 0.893496, 0.210494, 1.438550, 3.370790, 2.121110, 0.113133, 0.240735, 2.006010}
                  {0.551571, *       , 0.635346, 0.147304, 0.528191, 3.035500, 0.439157, 0.584665, 2.137150, 0.186979, 0.497671, 5.351420, 0.683162, 0.102711, 0.679489, 1.224190, 0.554413, 1.163920, 0.381533, 0.251849}
                  {0.509848, 0.635346, *       , 5.429420, 0.265256, 1.543640, 0.947198, 1.125560, 3.956290, 0.554236, 0.131528, 3.012010, 0.198221, 0.096162, 0.195081, 3.974230, 2.030060, 0.071917, 1.086000, 0.196246}
                  {0.738998, 0.147304, 5.429420, *       , 0.030295, 0.616783, 6.174160, 0.865584, 0.930676, 0.039437, 0.084805, 0.479855, 0.103754, 0.046730, 0.423984, 1.071760, 0.374866, 0.129767, 0.325711, 0.152335}
                  {1.027040, 0.528191, 0.265256, 0.030295, *       , 0.098818, 0.021352, 0.306674, 0.248972, 0.170135, 0.384287, 0.074034, 0.390482, 0.398020, 0.109404, 1.407660, 0.512984, 0.717070, 0.543833, 1.002140}
                  {0.908598, 3.035500, 1.543640, 0.616783, 0.098818, *       , 5.469470, 0.330052, 4.294110, 0.113917, 0.869489, 3.894900, 1.545260, 0.099921, 0.933372, 1.028870, 0.857928, 0.215737, 0.227710, 0.301281}
                  {1.582850, 0.439157, 0.947198, 6.174160, 0.021352, 5.469470, *       , 0.567717, 0.570025, 0.127395, 0.154263, 2.584430, 0.315124, 0.081134, 0.682355, 0.704939, 0.822765, 0.156557, 0.196303, 0.588731}
                  {1.416720, 0.584665, 1.125560, 0.865584, 0.306674, 0.330052, 0.567717, *       , 0.249410, 0.030450, 0.061304, 0.373558, 0.174100, 0.049931, 0.243570, 1.341820, 0.225833, 0.336983, 0.103604, 0.187247}
                  {0.316954, 2.137150, 3.956290, 0.930676, 0.248972, 4.294110, 0.570025, 0.249410, *       , 0.138190, 0.499462, 0.890432, 0.404141, 0.679371, 0.696198, 0.740169, 0.473307, 0.262569, 3.873440, 0.118358}
                  {0.193335, 0.186979, 0.554236, 0.039437, 0.170135, 0.113917, 0.127395, 0.030450, 0.138190, *       , 3.170970, 0.323832, 4.257460, 1.059470, 0.099929, 0.319440, 1.458160, 0.212483, 0.420170, 7.821300}
                  {0.397915, 0.497671, 0.131528, 0.084805, 0.384287, 0.869489, 0.154263, 0.061304, 0.499462, 3.170970, *       , 0.257555, 4.854020, 2.115170, 0.415844, 0.344739, 0.326622, 0.665309, 0.398618, 1.800340}
                  {0.906265, 5.351420, 3.012010, 0.479855, 0.074034, 3.894900, 2.584430, 0.373558, 0.890432, 0.323832, 0.257555, *       , 0.934276, 0.088836, 0.556896, 0.967130, 1.386980, 0.137505, 0.133264, 0.305434}
                  {0.893496, 0.683162, 0.198221, 0.103754, 0.390482, 1.545260, 0.315124, 0.174100, 0.404141, 4.257460, 4.854020, 0.934276, *       , 1.190630, 0.171329, 0.493905, 1.516120, 0.515706, 0.428437, 2.058450}
                  {0.210494, 0.102711, 0.096162, 0.046730, 0.398020, 0.099921, 0.081134, 0.049931, 0.679371, 1.059470, 2.115170, 0.088836, 1.190630, *       , 0.161444, 0.545931, 0.171903, 1.529640, 6.454280, 0.649892}
                  {1.438550, 0.679489, 0.195081, 0.423984, 0.109404, 0.933372, 0.682355, 0.243570, 0.696198, 0.099929, 0.415844, 0.556896, 0.171329, 0.161444, *       , 1.613280, 0.795384, 0.139405, 0.216046, 0.314887}
                  {3.370790, 1.224190, 3.974230, 1.071760, 1.407660, 1.028870, 0.704939, 1.341820, 0.740169, 0.319440, 0.344739, 0.967130, 0.493905, 0.545931, 1.613280, *       , 4.378020, 0.523742, 0.786993, 0.232739}
                  {2.121110, 0.554413, 2.030060, 0.374866, 0.512984, 0.857928, 0.822765, 0.225833, 0.473307, 1.458160, 0.326622, 1.386980, 1.516120, 0.171903, 0.795384, 4.378020, *       , 0.110864, 0.291148, 1.388230}
                  {0.113133, 1.163920, 0.071917, 0.129767, 0.717070, 0.215737, 0.156557, 0.336983, 0.262569, 0.212483, 0.665309, 0.137505, 0.515706, 1.529640, 0.139405, 0.523742, 0.110864, *       , 2.485390, 0.365369}
                  {0.240735, 0.381533, 1.086000, 0.325711, 0.543833, 0.227710, 0.196303, 0.103604, 3.873440, 0.420170, 0.398618, 0.133264, 0.428437, 6.454280, 0.216046, 0.786993, 0.291148, 2.485390, *       , 0.314730}
                  {2.006010, 0.251849, 0.196246, 0.152335, 1.002140, 0.301281, 0.588731, 0.187247, 0.118358, 7.821300, 1.800340, 0.305434, 2.058450, 0.649892, 0.314887, 0.232739, 1.388230, 0.365369, 0.314730, *       }};

dataString = "" + " $BASESET:BASE20\n" + ">Specie01\nL\n>Specie02\nL\n>Specie03\nF\n>Specie04\nL\n>Specie05\nL\n>Specie06\nL\n>Specie07\nL\n>Specie08\nL\n>Specie09\nL\n>Specie10\nL\n>Specie11\nV\n>Specie12\nL\n>Specie13\nL\n>Specie14\nL\n>Specie15\nL\n>Specie16\nL";
DataSet analysisData = ReadFromString(dataString);
DataSetFilter analysisFilter = CreateFilter(analysisData, 1);

HarvestFrequencies(freqEsts, analysisFilter, 1, 1, 1);

optimRatesMatrix = {20, 20};
for(tag1=0; tag1<20; tag1=tag1+1){
  for(tag2=0; tag2<20; tag2=tag2+1){
    if(tag1 != tag2){
      optimRatesMatrix[tag1][tag2] := wagRatesMatrix__[tag1__][tag2__] * mu;
    }
  }
}
Model baselineWAG = (optimRatesMatrix, freqEsts);
ACCEPT_ROOTED_TREES = 1;
Topology unratedTopology = "(((((Specie01:0.05,Specie02:0.05)iNode0:0.05,(Specie03:0.05,Specie04:0.05)iNode1:0.05)iNode8:0.05,((Specie05:0.05,Specie06:0.05)iNode2:0.05,(Specie07:0.05,Specie08:0.05)iNode3:0.05)iNode9:0.05)iNode12:0.05,(((Specie09:0.05,Specie10:0.05)iNode4:0.05,(Specie11:0.05,Specie12:0.05)iNode5:0.05)iNode10:0.05,((Specie13:0.05,Specie14:0.05)iNode6:0.05,(Specie15:0.05,Specie16:0.05)iNode7:0.05)iNode11:0.05)iNode13:0.05)iNode14:0.05)";
Tree unratedTree = unratedTopology;

LikelihoodFunction unratedLikelihood = (analysisFilter, unratedTree);
Optimize (unratedLikelyOutput, unratedLikelihood);

category rate1 = (2,EQUAL,MEAN, ,{{1}{5}}, 1,5);
category rate2 = (2,EQUAL,MEAN, ,{{2}{3}}, 2,3);



conditionalMatrix = wagRatesMatrix;
for(tag1=0; tag1<20; tag1 += 1){
  for(tag2=0; tag2<20; tag2 += 1){
    if(tag1!=tag2){
      conditionalMatrix[tag1][tag2] := wagRatesMatrix[tag1__][tag2__] * rate1 * rate2 * mu;
    }
  }
}

Model siteWAG = (conditionalMatrix, freqEsts);

ACCEPT_ROOTED_TREES = 1;
Tree siteTree = unratedTopology;
LikelihoodFunction siteLikelihood = (analysisFilter, siteTree);

ConstructCategoryMatrix(lResponse, siteLikelihood); 
ConstructCategoryMatrix(lWeights, siteLikelihood, SHORT);

fprintf(stdout, "\n", lResponse, "\n", lWeights);